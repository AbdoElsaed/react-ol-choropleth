{
  "project_name": "react-ol-choropleth",
  "description": "A React plugin for creating choropleth maps using OpenLayers. It simplifies rendering color-coded geographic data on maps with customizable layers, styles, and interactivity.",
  "rules": [
    {
      "name": "Code Style",
      "description": "Follow React best practices with TypeScript and functional components. Use hooks where applicable and prefer Zustand for state management."
    },
    {
      "name": "Folder Structure",
      "description": "Maintain a clear structure: `src/components` for UI components, `src/hooks` for reusable hooks, `src/utils` for helper functions, and `src/types` for TypeScript types."
    },
    {
      "name": "OpenLayers Integration",
      "description": "Encapsulate OpenLayers map logic inside reusable React components. Ensure layers and styles are dynamically configurable."
    },
    {
      "name": "Choropleth Styling",
      "description": "Support dynamic styling based on feature properties, allowing custom color scales, legends, and tooltip configurations."
    },
    {
      "name": "Interactivity",
      "description": "Enable interactive features like hover tooltips, click-to-show details, and dynamic layer updates."
    },
    {
      "name": "Testing",
      "description": "Write unit tests using Vitest for core functionalities and integration tests for OpenLayers map rendering."
    },
    {
      "name": "Documentation",
      "description": "Ensure each component and function is documented using JSDoc. Provide a README with setup instructions, usage examples, and API references."
    },
    {
      "name": "Example Project",
      "description": "Include a `demo/` folder with a Vite-based example app demonstrating core features."
    }
  ]
}
